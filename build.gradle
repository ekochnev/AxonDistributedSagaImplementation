buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenCentral()//mavenLocal()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE')
        classpath('org.springframework.boot:spring-boot-starter-web:1.3.0.RELEASE')
        classpath('org.springframework.boot:spring-boot-starter-data-jpa:1.3.0.RELEASE')
    }
}

configure(allprojects) { project ->
  group = 'AxonDistributedSagaImplementation'
  version = '1.0'

  ext {
    axonVersion = '2.4.3'
    groovyVersion = '2.4.5'
    springVersion = '4.2.3.RELEASE'
    springAmqpVersion = '1.5.2.RELEASE'
    springBootVersion = 'spring-boot-starter-web:1.3.0.RELEASE'
  }

  repositories {
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
  }

  apply plugin: 'java'
  apply plugin: 'groovy'
  apply plugin: 'spring-boot'
  apply plugin: 'idea'

  compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }

  compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }

  dependencies {
    //compile project(':core')

    compile("org.codehaus.groovy:groovy-all:${groovyVersion}")

    /*compile("org.springframework:spring-context:${springVersion}")
    compile("org.springframework.amqp:spring-rabbit:${springAmqpVersion}")
    compile("org.springframework.boot:spring-boot:${springBootVersion}")*/

    /*compile("org.axonframework:axon-core:${axonVersion}")
    compile("org.axonframework:axon-amqp:${axonVersion}")*/

    compile("com.jayway.restassured:rest-assured:2.3.1") {
      exclude group: "org.codehaus.groovy", module: 'groovy'
    }

    compile('commons-lang:commons-lang:2.6')

    /*compile("org.springframework.boot:spring-boot-starter-data-rest")
    //compile('org.springframework.boot:spring-boot-starter-web')*/

    testCompile("org.springframework.boot:spring-boot-starter-test")
  }
}

project(':core') {

  ext {
    axonVersion = '2.4.3'
    groovyVersion = '2.4.5'
    springVersion = '4.2.3.RELEASE'
    /*springAmqpVersion = '1.5.2.RELEASE'*/
    springBootVersion = 'spring-boot-starter-web:1.3.0.RELEASE'
    postgresVersion = '9.4-1202-jdbc4'
    derbyVersion = '10.12.1.1'
  }

  dependencies {
    compile("org.postgresql:postgresql:${postgresVersion}")
    /*compile("org.apache.derby:derby:$derbyVersion")*/
    compile('com.zaxxer:HikariCP:2.4.2')
    compile("org.hibernate:hibernate-validator")

    compile('javax.el:javax.el-api:3.0.0')

    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    testCompile('org.axonframework:axon-test:2.4.3')

    compile("org.axonframework:axon-core:${axonVersion}")
    //либы для использования распределенных команд axon-distributed-commandbus
    //TODO (deprecaed for us) compile("org.axonframework:axon-distributed-commandbus:${axonVersion}")
    //compile('org.jgroups:jgroups:3.6.6.Final')
    /*compile("org.axonframework:axon-amqp:${axonVersion}")*/
  }

  task testJar(type: Jar, dependsOn: testClasses) {
    baseName = "test-${project.archivesBaseName}"
    from sourceSets.test.output
  }

  configurations {
    tests
  }

  artifacts {
    tests testJar
  }
}

project(':main-server') {

  ext {
    axonVersion = '2.4.3'
    groovyVersion = '2.4.5'
    springVersion = '4.2.3.RELEASE'
    springAmqpVersion = '1.5.2.RELEASE'
    springBootVersion = 'spring-boot-starter-web:1.3.0.RELEASE'
    postgresVersion = '9.4-1202-jdbc4'
    //derbyVersion = '10.12.1.1'
  }

  dependencies {
    compile project(':core')

    compile("org.postgresql:postgresql:${postgresVersion}")
    //compile("org.apache.derby:derby:$derbyVersion")
    compile('com.zaxxer:HikariCP:2.4.2')
    compile("org.hibernate:hibernate-validator")
    compile('org.jboss.narayana.jta:narayana-jta:5.2.9.Final')

    compile('javax.el:javax.el-api:3.0.0')

    compile("org.axonframework:axon-core:${axonVersion}")
    compile("org.axonframework:axon-amqp:${axonVersion}")

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-amqp")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.axonframework:axon-test:${axonVersion}")
    //testCompile project(':core')
    //testCompile project(path: ':core', configuration: 'tests')
    //testCompile project(':core').sourceSets.test.output //тесты в отдельных модулях не пашут
  }

  /*configurations.compile.each {
    println "compile: $it"
  }*/

  configurations.testCompile.each {
    println "testCompile: $it"
  }
}

project(':remote-systems') {

  ext {
    axonVersion = '2.4.3'
    groovyVersion = '2.4.5'
    springVersion = '4.2.3.RELEASE'
    springAmqpVersion = '1.5.2.RELEASE'
    springBootVersion = 'spring-boot-starter-web:1.3.0.RELEASE'
    postgresVersion = '9.4-1202-jdbc4'
    //derbyVersion = '10.12.1.1'
  }

  dependencies {
    compile project(':core')

    compile("org.postgresql:postgresql:${postgresVersion}")
    //compile("org.apache.derby:derby:$derbyVersion")
    compile('com.zaxxer:HikariCP:2.4.2')
    compile("org.hibernate:hibernate-validator")
    compile('org.jboss.narayana.jta:narayana-jta:5.2.9.Final')

    compile('javax.el:javax.el-api:3.0.0')

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-amqp")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.axonframework:axon-test:${axonVersion}")

    compile("org.axonframework:axon-core:${axonVersion}")
    compile("org.axonframework:axon-amqp:${axonVersion}")
  }
}

project(':web-ui') {

  apply plugin: 'war'

  dependencies {
    compile project(':main-server')

    compile('javax.el:javax.el-api:3.0.0')
    //web framefork  that applies the Gang of Four decorator pattern to allow a clean separation of content from presentation
    compile('opensymphony:sitemesh:2.4.2')
    compile("javax.servlet:javax.servlet-api:3.1.0")
    compile("javax.servlet:jstl:1.2")
    compile('org.springframework.security:spring-security-taglibs:4.0.3.RELEASE')

    testCompile("org.springframework.boot:spring-boot-starter-test")

    compile("org.springframework.boot:spring-boot-starter-data-rest:1.3.1.RELEASE")
    compile('org.springframework.boot:spring-boot-starter-web:1.3.1.RELEASE') {
      //excluding a particular transitive dependency:
      exclude module: 'spring-boot-starter-tomcat'
    }
    /*compile('org.springframework.boot:spring-boot-starter-tomcat:1.3.1.RELEASE')*/
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    compile("org.springframework.boot:spring-boot-starter-security:1.3.1.RELEASE")
  }
}

