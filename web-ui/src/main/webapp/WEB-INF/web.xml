<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <display-name>Эмулятор системы платежей</display-name>

    <!--подцепляет конфиги-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!--/WEB-INF/spring/security-context.xml,-->
        <param-value>
            classpath:META-INF/spring/application-context.xml,
            classpath:META-INF/spring/database-context.xml
        </param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>


    <!-- ====================================================================== -->
    <!--                             Listeners                                  -->
    <!-- ====================================================================== -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!--сервлет, загружающий
    дополнительные конфигурационные файлы в контекст приложения
    Spring , созданный контроллером DispatcherServlet.todo для wildfly не нужен-->
    <!--<listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>-->

    <!-- ====================================================================== -->
    <!--                             Filters                                    -->
    <!-- ====================================================================== -->
    <!--фильтр для spring Security-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <!-- filter for applying Decorators to entire Pages -->
    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    </filter>

    <!-- CharacterEncodingFilter фильтр для указания кодировки символов в запросе -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <!--HiddenHttpMethodFilter фильтр для поддержки НТТР-методов,
    отличных от GET и POST (например, PUT)-->
    <filter>
        <filter-name>HttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter
        </filter-class>
    </filter>

    <!--OpenEntityManagerinViewFilter
    фильтр связывает диспетчер сущностей JPA
    (EntityManager) с потоком для полной обработки
    запроса. Он может помочь в восстановлении
    того же диспетчера сущностей для последующих
    запросов, поступающих от того же самого пользователя,
    что позволит функционировать таким
    средствам JPA, как ленивая выборка-->
    <filter>
        <filter-name>SpringOpenEntityManagerinViewFilter</filter-name>
        <filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class><!--OpenEntityManagerinViewFilter-->
    </filter>

    <!--маппинги для фильтров-->
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>HttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SpringOpenEntityManagerinViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- ====================================================================== -->
    <!--                             Servlets                                   -->
    <!-- ====================================================================== -->
    <!-- Spring MVC -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--/WEB-INF/spring/security-context.xml,-->
            <param-value>
                classpath:META-INF/spring/application-context.xml,
                classpath:META-INF/spring/database-context.xml
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>/index</welcome-file>
    </welcome-file-list>
    
    <resource-ref>
        <res-ref-name>jdbc/payment_system</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

</web-app>
